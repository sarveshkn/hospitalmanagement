<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<groupId>com.practise.microservice</groupId>
	<artifactId>hospitals-management</artifactId>
	<version>0.0.1-SNAPSHOT</version>
	<packaging>jar</packaging>
	<name>hospitals</name>
	<description>Demo project for Spring Boot. It has Swagger description file.</description>

	<properties>
		<java.version>1.8</java.version>
		<spring-cloud.version>Hoxton.SR3</spring-cloud.version>
		<generated-resources-path>${project.build.directory}/generated-resources
		</generated-resources-path>
		<generated-sources-path>${project.build.directory}/generated-sources
		</generated-sources-path>
		<rs-generated-code-package>com.practise.microservice.rs
		</rs-generated-code-package>
		<swagger-stub-model-path>${rs-generated-code-package}.model
		</swagger-stub-model-path>
		<swagger-stub-endpoints-path>${rs-generated-code-package}.endpoints
		</swagger-stub-endpoints-path>
		<jaxrs-api.version>2.0</jaxrs-api.version>
		<javax-inject-api.version>1</javax-inject-api.version>
		<javax-validation-api.version>1.1.0.Final
		</javax-validation-api.version>

		<slf4j-api.version>1.7.13</slf4j-api.version>
		<joda-time.version>2.9.3</joda-time.version>
		<jackson.version>2.13.4.1</jackson.version>
		<commons-lang3.version>3.4</commons-lang3.version>
		<commons.codec.version>1.10</commons.codec.version>
		<commons.compress.version>1.14</commons.compress.version>
		<commons.collection.version>4.1</commons.collection.version>
		<org.tukaani.version>1.6</org.tukaani.version>

		<junit.version>4.11</junit.version>
		<mockito.version>1.10.19</mockito.version>
		<powermock.version>1.6.4</powermock.version>
		<jsonassert.version>1.3.0</jsonassert.version>

		<assertj-core.version>2.4.1</assertj-core.version>
		<assertj-joda-time.version>1.1.0</assertj-joda-time.version>

		<hibernate.persistence.version>1.0.1.Final
		</hibernate.persistence.version>
		<spring.data.commons.version>1.13.3.RELEASE
		</spring.data.commons.version>
		<spring.data.jpa.version>1.8.2.RELEASE</spring.data.jpa.version>
		<snakeyaml.version>1.18</snakeyaml.version>
	</properties>

	<dependencies>
		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>compile</scope>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
		</dependency>

		<!-- Hello -->

		<dependency>
			<groupId>javax.ws.rs</groupId>
			<artifactId>javax.ws.rs-api</artifactId>
			<scope>compile</scope>
			<version>${jaxrs-api.version}</version>
		</dependency>
		<dependency>
			<groupId>javax.validation</groupId>
			<artifactId>validation-api</artifactId>
			<scope>compile</scope>
			<version>${javax-validation-api.version}</version>
		</dependency>

		<dependency>
			<groupId>com.fasterxml.jackson.core</groupId>
			<artifactId>jackson-databind</artifactId>
			<scope>compile</scope>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.jaxrs</groupId>
			<artifactId>jackson-jaxrs-json-provider</artifactId>
			<scope>compile</scope>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>com.fasterxml.jackson.datatype</groupId>
			<artifactId>jackson-datatype-joda</artifactId>
			<scope>compile</scope>
			<version>${jackson.version}</version>
		</dependency>
		<dependency>
			<groupId>joda-time</groupId>
			<artifactId>joda-time</artifactId>
			<scope>compile</scope>
			<version>${jaxrs-api.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-lang3</artifactId>
			<scope>compile</scope>
			<version>${commons-lang3.version}</version>
		</dependency>
		<dependency>
			<groupId>org.apache.commons</groupId>
			<artifactId>commons-collections4</artifactId>
			<scope>compile</scope>
			<version>4.1</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-core</artifactId>
			<version>3.3.5</version>
		</dependency>
		<dependency>
			<groupId>org.apache.cxf</groupId>
			<artifactId>cxf-rt-frontend-jaxrs</artifactId>
			<version>3.3.5</version>
		</dependency>
		<!-- import annotation to handle csv inputs -->
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-annotations</artifactId>
			<scope>compile</scope>
			<version>1.5.7</version>
		</dependency>
		<dependency>
			<groupId>io.swagger</groupId>
			<artifactId>swagger-jaxrs</artifactId>
			<version>1.5.7</version>
			<scope>compile</scope>
		</dependency>
		<!-- Testing dependencies -->
		<dependency>
			<groupId>junit</groupId>
			<artifactId>junit</artifactId>
			<version>${junit.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-core</artifactId>
			<version>${assertj-core.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.assertj</groupId>
			<artifactId>assertj-joda-time</artifactId>
			<version>${assertj-joda-time.version}</version>
			<scope>test</scope>
		</dependency>
		<dependency>
			<groupId>org.mockito</groupId>
			<artifactId>mockito-core</artifactId>
			<version>${mockito.version}</version>
			<scope>test</scope>
		</dependency>

	</dependencies>

	<build>
		<plugins>
			<plugin>
				<artifactId>maven-clean-plugin</artifactId>
				<executions>
					<execution>
						<id>auto-clean</id>
						<phase>initialize</phase>
						<goals>
							<goal>clean</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- This plugin parses the major version from the artifactId -->
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>build-helper-maven-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<id>add-source</id>
						<phase>generate-sources</phase>
						<goals>
							<goal>add-source</goal>
						</goals>
						<configuration>
							<sources>
								<source>${generated-sources-path}</source>
								<source>${generated-sources-path}/gen/java</source>
								<source>${generated-sources-path}/annotations</source>
							</sources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>io.swagger</groupId>
				<artifactId>swagger-codegen-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>swagger-codegen</id>
						<phase>process-sources</phase>
						<goals>
							<goal>generate</goal>
						</goals>
						<configuration>
							<inputSpec>${project.basedir}/src/main/resources/covid.yaml
							</inputSpec>
							<language>jaxrs-cxf</language>
							<output>${generated-sources-path}
							</output>
							<modelPackage>${swagger-stub-model-path}</modelPackage>
							<apiPackage>${swagger-stub-endpoints-path}</apiPackage>
							<addCompileSourceRoot>false</addCompileSourceRoot>
							<generateApiTests>false</generateApiTests>
							<generateModelTests>false</generateModelTests>
							<ignoreFileOverride>C:/Java-Projects/Microservice/hospitals/hospitals-management/src/main/resources/.swagger-digital-api-codegen-ignore
							</ignoreFileOverride>
							<configOptions>
								<dateLibrary>joda</dateLibrary>
								<endpointSuffix>Api</endpointSuffix>
								<generateSpringApplication>true</generateSpringApplication>
								<useBeanValidationFeature>false</useBeanValidationFeature>
								<useAnnotatedBasePath>true</useAnnotatedBasePath>
								<addConsumesProducesJson>true</addConsumesProducesJson>
								<useJaxbAnnotations>true</useJaxbAnnotations>
								<serializableModel>true</serializableModel>
								<sourceFolder>gen/java</sourceFolder>
								<useGenericResponse>true</useGenericResponse>
								<useMultipartFeature>false</useMultipartFeature>
							</configOptions>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<artifactId>maven-resources-plugin</artifactId>
				<version>2.7</version>
				<executions>
					<execution>
						<id>copy-swagger-version-resources</id>
						<phase>generate-resources</phase>
						<goals>
							<goal>copy-resources</goal>
						</goals>
						<configuration>
							<outputDirectory>${project.build.directory}/classes
							</outputDirectory>
							<resources>
								<resource>
									<directory>src/main/resources</directory>
									<filtering>true</filtering>
								</resource>
							</resources>
						</configuration>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-source-plugin</artifactId>
				<executions>
					<execution>
						<id>attach-sources</id>
						<goals>
							<goal>jar-no-fork</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-antrun-plugin</artifactId>
				<version>1.7</version>
				<executions>
					<execution>
						<phase>process-sources</phase>
						<goals>
							<goal>run</goal>
						</goals>
						<configuration>
							<tasks>
								<delete>
									<fileset
										dir="${project.build.directory}/generated-sources/src/main/java/com/practise/microservice/rs/endpoints/impl/"
										includes="*.java" />
									<fileset
										dir="${project.build.directory}/generated-sources/src/test/java/com/practise/microservice/rs/endpoints/"
										includes="*" />
								</delete>
							</tasks>
						</configuration>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>
